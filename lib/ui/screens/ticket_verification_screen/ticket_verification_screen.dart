import 'package:flutter/material.dart';import 'package:flutter_pdfview/flutter_pdfview.dart';import 'package:go_router/go_router.dart';import 'package:online_ticked/core/constants/ticket_state.dart';import 'package:online_ticked/provider/ticket_provider.dart';import 'package:online_ticked/ui/widgets/pdf_widget.dart';import 'package:online_ticked/ui/widgets/qr_scanner.dart';import 'package:online_ticked/util/bildiriler.dart';import 'package:permission_handler/permission_handler.dart';import 'package:provider/provider.dart';import 'ticket_verification_screen_mixin.dart';/// TicketVerificationScreen ekranıclass TicketVerificationScreen extends StatefulWidget {  /// TicketVerificationScreen ekranı  const TicketVerificationScreen({super.key,required this.id});  final String? id;  @override  State<TicketVerificationScreen> createState() =>      _TicketVerificationScreenState();}class _TicketVerificationScreenState extends State<TicketVerificationScreen>    with TicketVerificationScreenMixin {  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        title: const Text('Hediye Kartı Dogrula'),      ),      body: Column(        children: [          Expanded(            child: Builder(builder: (context) {              if (id == null) {                return const SizedBox();              }              final ticket = context.watch<TicketProvider>().getTicketFromId(id!);              if (ticket == null) {                return const SizedBox();              }              return FutureBuilder(future: PdfWidget.instance.createFile(ticket), builder: (context,snapshot){                if(snapshot.connectionState == ConnectionState.waiting){                  return const Center(child: CircularProgressIndicator(),);                }                if(snapshot.hasError){                  return const Center(child: Text('Hata oluştu'),);                }                return Column(                  children: [                    Container(                      color: ticket.state.color,                      child: ListTile(                        leading: Icon(ticket.state.icon),                        title: Text('Hediye Kartı Durumu: ${ticket.state.title}'),                      ),                    ),                    Expanded(                      child: PDFView(                        filePath: snapshot.data?.path as String,                      ),                    ),                    if(ticket.state == TicketState.ready)                    ListTile(                      leading: const Icon(Icons.check),                      title: const Text('Hediye Kartını Kullan'),                      trailing: const Icon(Icons.arrow_forward_ios),                      onTap: () async {                        final response = await bildiriCevap(context, 'Hediye Kartı Kullanılsın mı?');                        if(!response){                          return;                        }                        context.read<TicketProvider>().useTicket(ticket);                        bildiri(context, 'Hediye Kartı Kullanıldı',);                      },                    ),                  ],                );              });            }),          ),          Padding(            padding: const EdgeInsets.all(8.0),            child: Center(              child: FilledButton(                  onPressed: () async {                    /// kamera izni iste                    await Permission.camera.request();                    final result = await Navigator.push(context,                        MaterialPageRoute(builder: (context) => const QrScanner()));                    print(result);                    setState(() {                      id = result as String?;                    });                  },                  child: Center(child: Text('Hediye Kartı Tara')))),          ),        ],      ),    );  }}