import 'dart:io';import 'dart:ui';import 'package:flutter/services.dart';import 'package:online_ticked/core/constants/app_asets.dart';import 'package:online_ticked/data/models/ticket.dart';import 'package:online_ticked/util/extension.dart';import 'package:path_provider/path_provider.dart';import 'package:pdf/pdf.dart';import 'package:pdf/widgets.dart';import 'package:qr_flutter/qr_flutter.dart';import 'package:share_plus/share_plus.dart';class PdfWidget {  PdfWidget._();  static PdfWidget? _instance;  static PdfWidget get instance => _instance ??= PdfWidget._();  Future<void> create(Ticket ticket) async {    final file = await createFile(ticket);    // PDF dosyasını paylaş    await Share.shareXFiles([XFile(file.path)], text: 'Çınar Spa Hediye Kartı');  }  Future<File> createFile(Ticket ticket) async {    final pdf = Document();    final qrValidationResult = QrValidator.validate(      data: ticket.id,      version: QrVersions.auto,      errorCorrectionLevel: QrErrorCorrectLevel.L,    );    if (qrValidationResult.status == QrValidationStatus.valid) {      final qrCode = qrValidationResult.qrCode;      final painter = QrPainter.withQr(        qr: qrCode!,        color: const Color(0xFF000000),        emptyColor: const Color(0xFFFFFFFF),        gapless: true,        embeddedImageStyle: null,        embeddedImage: null,      );      final picData =          await painter.toImageData(200, format: ImageByteFormat.png);      final qrImage = MemoryImage(picData!.buffer.asUint8List());      final fontData = await rootBundle.load(AppAsets.pfdFont.value);      final ttf = Font.ttf(fontData.buffer.asByteData());      final logoAsset = await rootBundle.load(AppAsets.logo.value);      final logo = MemoryImage(logoAsset.buffer.asUint8List());      final page = Page(        pageFormat: PdfPageFormat.a4,        build: (Context context) {          return Container(              decoration: BoxDecoration(                border:                    Border.all(color: PdfColor.fromHex('#FFD700'), width: 2),                borderRadius: BorderRadius.circular(8),              ),              child: Padding(                  padding: const EdgeInsets.all(4.0),                  child: Container(                      decoration: BoxDecoration(                        border: Border.all(                            color: PdfColor.fromHex('#FFD700'), width: 2),                        borderRadius: BorderRadius.circular(8),                      ),                      child: Padding(                          padding: const EdgeInsets.all(8.0),                          child: Column(                            children: [                              Row(                                  mainAxisAlignment:                                      MainAxisAlignment.spaceBetween,                                  children: [                                    Image(logo, width: 100, height: 100),                                    Text('${ticket.createdAt.date}',                                        style:                                            TextStyle(fontSize: 20, font: ttf))                                  ]),                              Padding(                                padding: const EdgeInsets.all(8.0),                                child: Text('HEDİYE KARTI',                                    textAlign: TextAlign.center,                                    style: TextStyle(fontSize: 45, font: ttf)),                              ),                              Center(                                child: Text(ticket.title,                                    textAlign: TextAlign.center,                                    style: TextStyle(fontSize: 35, font: ttf)),                              ),                              Expanded(child:Padding(                                padding: const EdgeInsets.all(8.0),                                child: Center(                                    child: Image(qrImage,                                        width: 200, height: 200)),                              ),),                              Text(ticket.description,                                  textAlign: TextAlign.center,                                  style: TextStyle(fontSize: 20, font: ttf)),                              Container(                                child: Text(                                    'Bu Hediye kartı ${ticket.finishedAt.date} tarihine kadar geçerlidir.',                                    textAlign: TextAlign.center,                                    style: TextStyle(fontSize: 15, font: ttf)),                              )                            ],                          )))));        },      );      pdf.addPage(page);      final output = await getTemporaryDirectory();      final file = File("${output.path}/ticket.pdf");      await file.writeAsBytes(await pdf.save());      return file;    } else {      print('QR kod oluşturma hatası: ${qrValidationResult.error}');      return File('');    }  }}